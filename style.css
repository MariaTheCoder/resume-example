:root {
  /* colors */
  --clr-neutral-100: hsla(0, 0%, 100%, 1);
  --clr-primary-800: hsla(229, 47%, 17%, 1);
  --clr-primary-700: hsla(229, 43%, 20%, 1);
  --clr-primary-400: hsla(230, 50%, 58%, 0.3);
  --clr-primary-300: hsla(229, 36%, 39%, 1);
  --clr-primary-200: hsla(229, 21%, 53%, 1);
  --clr-accent-400: hsla(147, 93%, 43%, 1);
  --clr-secondary-400: hsla(229, 78%, 60%, 1);

  /* font family */
  --ff-base: "Outfit Variable", sans-serif;

  /* font weights */
  --fw-regular: 300;
  --fw-semi-bond: 400;
  --fw-bold: 700;

  /* font size */
  --fs-200: 0.875rem;
  --fs-300: 1rem;
  --fs-400: 1.125rem;
  --fs-500: 1.375rem;
  --fs-600: 1.75rem;
  --fs-700: 3.25rem;
}

/* basic reset for all elements of the DOM as well as their psuedo elements*/
*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

/* basic reset for img and svg elements, as well as pictures and videos*/
img,
svg,
picture,
video {
  max-width: 100%;
  display: block;
}

/* set dark theme */
html {
  color-scheme: dark;
}

/* use custom variables for styling of the body element */
body {
  background-color: var(--clr-primary-800);
  color: var(--clr-neutral-100);
  font-family: var(--ff-base);
  font-size: var(--fs-400);
  font-weight: var(--fw-regular);
  line-height: 1.5;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: insert(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.main-grid {
  display: grid;
  grid-template-columns: 15rem auto;
  grid-auto-flow: dense;
  align-items: center;
  /* the first value set for min-height acts as a fallback in case the unit dvh is not supported by the browser */
  min-height: 100vh;
  /* unit used for small viewports with interfaces that are dynamically expanded and retracted, e.g. smartphone screens. 
  By using dynamic viewport units, the size will automatically adjust in response to the browser UI state */
  min-height: 100dvh;
}

main {
  grid-column: 2;
}

aside {
  grid-column: 1;
  align-self: stretch;
}

.job-experience {
  display: grid;
  grid-auto-flow: column;
}

.icon-list {
  height: 100%;
  border-left: 1px solid orange;
  margin: 0;
  margin-left: 4rem;

  list-style: none;
  display: grid;
  align-content: center;
  gap: 3rem;
}

.icon {
  height: 100px;
  width: auto;
}

.icon-list > li {
  position: relative;
  padding-left: 3rem;
}

.icon-list > li::after {
  content: "";
  position: absolute;

  /* specify width and then use aspect-ratio to declare the relationship between width and height
  By doing this, we are saying that there is a 1 to 1 ratio between width and height*/
  width: 0.5rem;
  aspect-ratio: 1;
  background: var(--clr-neutral-100);
}
